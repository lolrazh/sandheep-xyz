
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base colors (Editorial Minimal: linen background, near-black text) */
    --background: 30 67% 94%; /* linen */
    --foreground: 0 0% 10%; /* near black */

    --card: 30 67% 94%;
    --card-foreground: 0 0% 10%;

    --popover: 30 67% 94%;
    --popover-foreground: 0 0% 10%;

    --primary: 0 0% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 30 30% 90%;
    --secondary-foreground: 0 0% 15%;

    --muted: 30 30% 92%;
    --muted-foreground: 30 12% 40%;

    --accent: 30 30% 90%;
    --accent-foreground: 0 0% 15%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 30 20% 86%;
    --input: 30 20% 86%;
    --ring: 0 0% 20%;

    /* Radius tokens */
    --radius: 0.5rem; /* md */
    --radius-sm: 0.25rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;

    /* Sidebar */
    --sidebar-background: 30 67% 94%;
    --sidebar-foreground: 0 0% 20%;
    --sidebar-primary: 0 0% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 30 30% 90%;
    --sidebar-accent-foreground: 0 0% 15%;
    --sidebar-border: 30 20% 86%;
    --sidebar-ring: 0 0% 30%;

    /* Motion tokens */
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-standard: cubic-bezier(.2,.8,.2,1);
    --ease-theme: cubic-bezier(0.23, 1, 0.32, 1);

    --duration-xxs: 120ms;
    --duration-xs: 160ms;
    --duration-sm: 200ms;
    --duration-md: 240ms;
    --duration-lg: 320ms;
    --duration-xl: 400ms;
    --duration-theme: 320ms;

    /* Shadow tokens */
    --shadow-1: 0 1px 2px rgba(0, 0, 0, 0.06);
    --shadow-2: 0 4px 12px rgba(0, 0, 0, 0.08);
    --shadow-3: 0 12px 24px rgba(0, 0, 0, 0.12);

    /* Layout & spacing tokens */
    --container-max: 1200px;
    --article-measure: 72ch;
    --gutter: 24px;

    --space-1: 4px;
    --space-2: 8px;
    --space-3: 12px;
    --space-4: 16px;
    --space-5: 24px;
    --space-6: 32px;
    --space-7: 48px;
    --space-8: 64px;

    /* Z-Index Scale */
    --z-dropdown: 50;
    --z-overlay: 100;
    --z-content: 140;
    --z-modal: 150;
    --z-header: 160;
    --z-noise: 1000;
    --z-menu: 190;
    --z-tooltip: 200;

    /* Interaction States */
    --opacity-hover: 0.8;
    --opacity-active: 0.7;
    --opacity-disabled: 0.5;
    --opacity-muted: 0.6;

    /* OpenGraph & Layout Constants */
    --og-width: 1200;
    --og-height: 630;
    --mobile-font-scale: 0.9375; /* 15/16 */
    
    /* Semantic Border Variants */
    --border-subtle: 30 20% 86% / 0.4;
    --border-muted: 30 20% 86% / 0.6;  
    --border-strong: 30 20% 86% / 0.8;
  }

  .dark {
    /* Dark warm browns inspired by your linen theme */
    --background: 30 25% 8%; /* dark warm brown */
    --foreground: 30 15% 92%; /* warm off-white */

    --card: 30 22% 10%;
    --card-foreground: 30 15% 92%;

    --popover: 30 22% 10%;
    --popover-foreground: 30 15% 92%;

    --primary: 30 15% 92%;
    --primary-foreground: 30 25% 8%;

    --secondary: 30 18% 14%;
    --secondary-foreground: 30 15% 88%;

    --muted: 30 18% 14%;
    --muted-foreground: 30 8% 65%;

    --accent: 30 18% 14%;
    --accent-foreground: 30 15% 88%;

    --destructive: 0 62% 50%;
    --destructive-foreground: 30 15% 92%;

    --border: 30 15% 18%;
    --input: 30 15% 18%;
    --ring: 30 8% 75%;

    --radius: 0.5rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;

    --sidebar-background: 30 25% 8%;
    --sidebar-foreground: 30 15% 92%;
    --sidebar-primary: 30 15% 92%;
    --sidebar-primary-foreground: 30 25% 8%;
    --sidebar-accent: 30 18% 14%;
    --sidebar-accent-foreground: 30 15% 88%;
    --sidebar-border: 30 15% 18%;
    --sidebar-ring: 30 8% 75%;

    /* Dark mode semantic border variants */
    --border-subtle: 30 15% 18% / 0.4;
    --border-muted: 30 15% 18% / 0.6;  
    --border-strong: 30 15% 18% / 0.8;
  }

  /* Smooth theme transition helper */
  .theme-transition, .theme-transition * {
    transition-property: background-color, color, border-color, fill, stroke, box-shadow;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }

  @media (prefers-reduced-motion: reduce) {
    :root {
      --duration-xxs: 1ms;
      --duration-xs: 1ms;
      --duration-sm: 1ms;
      --duration-md: 1ms;
      --duration-lg: 1ms;
      --duration-xl: 1ms;
    }
  }

  body {
    @apply bg-background text-foreground font-playfair;
    min-height: 100vh;
  }

  /* Slightly smaller base type on small screens */
  @media (max-width: 640px) {
    html { font-size: calc(16px * var(--mobile-font-scale)); }
  }

  /* Safari quirk: color transitions driven only by CSS variable changes may not animate.
     Explicitly set body text color per theme so the property itself changes and transitions. */
  html:not(.dark) body {
    color: hsl(0 0% 10%);
  }
  .dark body {
    color: hsl(30 15% 92%);
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-playfair font-bold;
  }

  p {
    @apply leading-relaxed;
  }

  /* Custom selection styles */
  ::selection {
    background-color: hsl(var(--foreground) / 0.8);
    color: hsl(var(--background));
  }
  
  ::-moz-selection {
    background-color: hsl(var(--foreground) / 0.8);
    color: hsl(var(--background));
  }
}

@layer components {
  /* Force smooth color transitions for key text in Safari */
  .text-theme {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }
  html:not(.dark) .text-theme {
    color: hsl(0 0% 10%);
  }
  .dark .text-theme {
    color: hsl(30 15% 92%);
  }

  .text-theme-muted {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }
  html:not(.dark) .text-theme-muted {
    color: hsl(0 0% 10% / 0.6);
  }
  .dark .text-theme-muted {
    color: hsl(30 15% 92% / 0.6);
  }

  .film-grain {
    position: fixed;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    width: 200%;
    height: 200vh;
    background: transparent url('http://assets.iceable.com/img/noise-transparent.png') repeat 0 0;
    background-repeat: repeat;
    animation: film-grain 0.2s steps(1) infinite;
    opacity: var(--opacity-muted);
    z-index: var(--z-noise);
    pointer-events: none;
  }

  /* Utility: invert image in dark mode only */
  .invert-dark {
    filter: none;
  }
  .dark .invert-dark {
    filter: invert(1) hue-rotate(180deg);
  }

  .year-divider {
    @apply relative flex items-center my-8;
  }

  .year-divider::before, .year-divider::after {
    @apply content-[''] flex-grow border-t border-foreground/60;
  }

  .year-divider::before {
    @apply mr-4;
  }

  .year-divider::after {
    @apply ml-4;
  }

  .article-link {
    @apply relative inline-block after:content-[''] after:absolute after:w-full after:h-0.5 after:bottom-0 after:left-0 after:bg-foreground after:transition-transform after:duration-300;
  }

  /* Baseline underline effect handled here for better touch behavior */
  .article-link::after {
    transform: scaleX(0);
    transform-origin: bottom right;
  }
  @media (hover: hover) {
    .article-link:hover::after {
      transform: scaleX(1);
      transform-origin: bottom left;
    }
  }

  /* Tactile feedback */
  .article-link:active { opacity: var(--opacity-hover); }

  /* Larger tap target on touch */
  @media (hover: none) {
    .article-link { padding-top: 6px; padding-bottom: 6px; }
  }

  /* Semantic separators using design tokens */
  .separator-subtle { @apply bg-[hsl(var(--border-subtle))]; }
  .separator-muted { @apply bg-[hsl(var(--border-muted))]; }  
  .separator-strong { @apply bg-[hsl(var(--border-strong))]; }
}

@layer utilities {
  /* Design-system fix: ensure text colors resolve to literal HSL per theme
     so Safari animates color changes reliably. Covers common opacity variants. */

  /* Base foreground */
  html:not(.dark) .text-foreground { color: hsl(0 0% 10%) !important; }
  .dark .text-foreground { color: hsl(30 15% 92%) !important; }

  /* Opacity variants used in the app */
  html:not(.dark) .text-foreground\/90 { color: hsl(0 0% 10% / 0.9) !important; }
  .dark .text-foreground\/90 { color: hsl(30 15% 92% / 0.9) !important; }

  html:not(.dark) .text-foreground\/80 { color: hsl(0 0% 10% / 0.8) !important; }
  .dark .text-foreground\/80 { color: hsl(30 15% 92% / 0.8) !important; }

  html:not(.dark) .text-foreground\/70 { color: hsl(0 0% 10% / 0.7) !important; }
  .dark .text-foreground\/70 { color: hsl(30 15% 92% / 0.7) !important; }

  html:not(.dark) .text-foreground\/60 { color: hsl(0 0% 10% / 0.6) !important; }
  .dark .text-foreground\/60 { color: hsl(30 15% 92% / 0.6) !important; }

  html:not(.dark) .text-foreground\/50 { color: hsl(0 0% 10% / 0.5) !important; }
  .dark .text-foreground\/50 { color: hsl(30 15% 92% / 0.5) !important; }

  /* Hover variant commonly used */
  html:not(.dark) .hover\:text-foreground:hover { color: hsl(0 0% 10%) !important; }
  .dark .hover\:text-foreground:hover { color: hsl(30 15% 92%) !important; }

  /* Ensure color transitions apply to these during theme toggles */
  .theme-transition :where(.text-foreground,
                           .text-foreground\/90,
                           .text-foreground\/80,
                           .text-foreground\/70,
                           .text-foreground\/60,
                           .text-foreground\/50,
                           .hover\:text-foreground:hover) {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }

  /* Disable hover-only effects on touch devices */
  @media (hover: none) {
    /* Prevent sticky underline hover on touch */
    .article-link:hover::after { transform: scaleX(0) !important; }
    /* Cancel group-hover opacity on touch */
    .group:hover .group-hover\:opacity-80 { opacity: 1 !important; }
    /* Neutralize hover color changes on touch */
    .hover\:text-foreground:hover { color: inherit !important; }
  }

  /* Article links: set explicit color + animate */
  html:not(.dark) .article-link { color: hsl(0 0% 10%) !important; }
  .dark .article-link { color: hsl(30 15% 92%) !important; }
  .theme-transition :where(.article-link) {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }

  /* Headings in main content: explicit color + animate */
  html:not(.dark) main :where(h1,h2,h3,h4,h5,h6) { color: hsl(0 0% 10%) !important; }
  .dark main :where(h1,h2,h3,h4,h5,h6) { color: hsl(30 15% 92%) !important; }
  .theme-transition main :where(h1,h2,h3,h4,h5,h6) {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }

  /* Prose content: override default prose colors with theme-aware colors */
  html:not(.dark) .prose { color: hsl(0 0% 10%) !important; }
  .dark .prose { color: hsl(30 15% 92%) !important; }
  
  html:not(.dark) .prose :where(p,li,blockquote,code,pre) { color: hsl(0 0% 10%) !important; }
  .dark .prose :where(p,li,blockquote,code,pre) { color: hsl(30 15% 92%) !important; }
  
  /* Prose transition animations */
  .theme-transition .prose,
  .theme-transition .prose :where(p,li,blockquote,code,pre,h1,h2,h3,h4,h5,h6) {
    transition-property: color;
    transition-duration: var(--duration-theme);
    transition-timing-function: var(--ease-theme);
  }
}
